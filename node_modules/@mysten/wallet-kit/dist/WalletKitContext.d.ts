import { WalletKitCore, WalletKitCoreOptions, WalletKitCoreState } from '@mysten/wallet-kit-core';
import { ReactNode } from 'react';
export declare const WalletKitContext: import("react").Context<WalletKitCore | null>;
interface WalletKitProviderProps extends Partial<WalletKitCoreOptions> {
    /** Enable the development-only unsafe burner wallet, which is can be useful for testing. */
    enableUnsafeBurner?: boolean;
    children: ReactNode;
    disableAutoConnect?: boolean;
    features?: string[];
}
export declare function WalletKitProvider({ preferredWallets, children, enableUnsafeBurner, storageAdapter, storageKey, disableAutoConnect, features, }: WalletKitProviderProps): import("react/jsx-runtime").JSX.Element;
type UseWalletKit = WalletKitCoreState & Pick<WalletKitCore, 'connect' | 'disconnect' | 'selectAccount' | 'signMessage' | 'signPersonalMessage' | 'signTransactionBlock' | 'signAndExecuteTransactionBlock'>;
export declare function useWalletKit(): UseWalletKit;
export {};
